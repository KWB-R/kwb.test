% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testMain.R
\name{test_function}
\alias{test_function}
\title{Test if Function Reproduces Stored Results}
\usage{
test_function(functionName, testdata = loadArgs(functionName,
  file.path(tempdir(), "test")), dbg = TRUE)
}
\arguments{
\item{functionName}{Name of the function to test. It must be callable, i.e.
either defined in the global environment or on the search path.}

\item{testdata}{List of lists containing function arguments (in elemenet
\code{args}) and results (in element \code{result}), just as returned by
  \code{\link{loadArgs}}. If no \code{testdata} are given, it is tried to
  load test data by calling \code{loadArgs} on \code{functionName}.}

\item{dbg}{if \code{TRUE} (default) debug messages are shown}
}
\value{
\code{TRUE} If the function \code{functionName} is able to reproduce
  the same results as given in the \code{result} elements in \code{testdata}
  for all the argument combinations given in the \code{args} elements in
  \code{testdata}.
}
\description{
Call the function \code{functionName} with the arguments contained in
\code{testdata} and compare the results with the results in \code{testdata}
for identity.
}
\examples{
# Define a function using saveArgs() to save arguments and result
squareSum <- function(a, b) {
  result <- a * a + b * b
  saveArgs("squareSum", args = list(a = a, b = b), result = result)
  result
}

# Set global variable TESTMODE to "activate" saveArgs() in squareSum()
TESTMODE <- TRUE

# Call the function with different arguments
squareSum(1, 2)
squareSum(2, 3)
squareSum(-1, -2)

# The arguments and function results were saved here:
dir(file.path(tempdir(), "test"))

# Write a new (wrong) version of the function
squareSum.new <- function(a, b) {
  a * a - b * b
}

# Check if it returns the same results
test_function("squareSum.new", loadArgs("squareSum"))

# If no test data are given, loadArgs is called on the function to test,
# i.e. testing squareSum on the test data created by the same function will
# return TRUE if the function did not change in the meanwhile.
test_function("squareSum")
}
